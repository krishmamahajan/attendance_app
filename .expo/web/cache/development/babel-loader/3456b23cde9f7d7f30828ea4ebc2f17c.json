{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Base from \"../Base.js\";\n\nvar X64Word = function (_Base) {\n  _inherits(X64Word, _Base);\n\n  var _super = _createSuper(X64Word);\n\n  function X64Word(high, low) {\n    var _this;\n\n    _classCallCheck(this, X64Word);\n\n    _this = _super.call(this);\n    _this.high = high;\n    _this.low = low;\n    return _this;\n  }\n\n  return X64Word;\n}(Base);\n\nexport { X64Word as default };","map":{"version":3,"sources":["D:/Krishma_other_pc/react-native_attendance_app/node_modules/react-native-hash/JSHash/lib/core/x64-core/X64Word.js"],"names":["Base","X64Word","high","low"],"mappings":";;;;;;;;;AAEA,OAAOA,IAAP;;IAMqBC,O;;;;;AAWnB,mBAAYC,IAAZ,EAAkBC,GAAlB,EAAuB;AAAA;;AAAA;;AACrB;AAEA,UAAKD,IAAL,GAAYA,IAAZ;AACA,UAAKC,GAAL,GAAWA,GAAX;AAJqB;AAKtB;;;EAhBkCH,I;;SAAhBC,O","sourcesContent":["/* eslint linebreak-style: [\"error\", \"windows\"] */\r\n\r\nimport Base from '../Base.js';\r\n\r\n\r\n/**\r\n   * A 64-bit word.\r\n   */\r\nexport default class X64Word extends Base {\r\n  /**\r\n     * Initializes a newly created 64-bit word.\r\n     *\r\n     * @param {number} high The high 32 bits.\r\n     * @param {number} low The low 32 bits.\r\n     *\r\n     * @example\r\n     *\r\n     *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\r\n     */\r\n  constructor(high, low) {\r\n    super();\r\n\r\n    this.high = high;\r\n    this.low = low;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}