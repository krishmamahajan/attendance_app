{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Krishma_other_pc\\\\react-native_attendance_with_navigation-master\\\\node_modules\\\\react-native-multiple-select\\\\lib\\\\react-native-multi-select.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport PropTypes from 'prop-types';\nimport reject from 'lodash/reject';\nimport find from 'lodash/find';\nimport get from 'lodash/get';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport styles, { colorPack } from \"./styles\";\nimport nodeTypes from \"./helpers/nodeTypes\";\n\nif (UIManager.setLayoutAnimationEnabledExperimental) {\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n}\n\nvar defaultSearchIcon = React.createElement(Icon, {\n  name: \"magnify\",\n  size: 20,\n  color: colorPack.placeholderTextColor,\n  style: {\n    marginRight: 10\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }\n});\n\nvar MultiSelect = function (_Component) {\n  _inherits(MultiSelect, _Component);\n\n  var _super = _createSuper(MultiSelect);\n\n  function MultiSelect(props) {\n    var _this;\n\n    _classCallCheck(this, MultiSelect);\n\n    _this = _super.call(this, props);\n\n    _this.getSelectedItemsExt = function (optionalSelctedItems) {\n      return React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 5\n        }\n      }, _this._displaySelectedItems(optionalSelctedItems));\n    };\n\n    _this._onChangeInput = function (value) {\n      var onChangeInput = _this.props.onChangeInput;\n\n      if (onChangeInput) {\n        onChangeInput(value);\n      }\n\n      _this.setState({\n        searchTerm: value\n      });\n    };\n\n    _this._getSelectLabel = function () {\n      var _this$props = _this.props,\n          selectText = _this$props.selectText,\n          single = _this$props.single,\n          selectedItems = _this$props.selectedItems,\n          displayKey = _this$props.displayKey;\n\n      if (!selectedItems || selectedItems.length === 0) {\n        return selectText;\n      }\n\n      if (single) {\n        var item = selectedItems[0];\n\n        var foundItem = _this._findItem(item);\n\n        return get(foundItem, displayKey) || selectText;\n      }\n\n      return selectText + \" (\" + selectedItems.length + \" selected)\";\n    };\n\n    _this._findItem = function (itemKey) {\n      var _this$props2 = _this.props,\n          items = _this$props2.items,\n          uniqueKey = _this$props2.uniqueKey;\n      return find(items, function (singleItem) {\n        return singleItem[uniqueKey] === itemKey;\n      }) || {};\n    };\n\n    _this._displaySelectedItems = function (optionalSelctedItems) {\n      var _this$props3 = _this.props,\n          fontFamily = _this$props3.fontFamily,\n          tagRemoveIconColor = _this$props3.tagRemoveIconColor,\n          tagBorderColor = _this$props3.tagBorderColor,\n          uniqueKey = _this$props3.uniqueKey,\n          tagTextColor = _this$props3.tagTextColor,\n          selectedItems = _this$props3.selectedItems,\n          displayKey = _this$props3.displayKey;\n      var actualSelectedItems = optionalSelctedItems || selectedItems;\n      return actualSelectedItems.map(function (singleSelectedItem) {\n        var item = _this._findItem(singleSelectedItem);\n\n        if (!item[displayKey]) return null;\n        return React.createElement(View, {\n          style: [styles.selectedItem, {\n            width: item[displayKey].length * 8 + 60,\n            justifyContent: 'center',\n            height: 40,\n            borderColor: tagBorderColor\n          }],\n          key: item[uniqueKey],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: [{\n            flex: 1,\n            color: tagTextColor,\n            fontSize: 15\n          }, fontFamily ? {\n            fontFamily: fontFamily\n          } : {}],\n          numberOfLines: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }\n        }, item[displayKey]), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this._removeItem(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 11\n          }\n        }, React.createElement(Icon, {\n          name: \"close-circle\",\n          style: {\n            color: tagRemoveIconColor,\n            fontSize: 22,\n            marginLeft: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }\n        })));\n      });\n    };\n\n    _this._removeItem = function (item) {\n      var _this$props4 = _this.props,\n          uniqueKey = _this$props4.uniqueKey,\n          selectedItems = _this$props4.selectedItems,\n          onSelectedItemsChange = _this$props4.onSelectedItemsChange;\n      var newItems = reject(selectedItems, function (singleItem) {\n        return item[uniqueKey] === singleItem;\n      });\n      onSelectedItemsChange(newItems);\n    };\n\n    _this._removeAllItems = function () {\n      var onSelectedItemsChange = _this.props.onSelectedItemsChange;\n      onSelectedItemsChange([]);\n    };\n\n    _this._clearSelector = function () {\n      _this.setState({\n        selector: false\n      });\n    };\n\n    _this._clearSelectorCallback = function () {\n      var onClearSelector = _this.props.onClearSelector;\n\n      _this._clearSelector();\n\n      if (onClearSelector) {\n        onClearSelector();\n      }\n    };\n\n    _this._toggleSelector = function () {\n      var onToggleList = _this.props.onToggleList;\n\n      _this.setState({\n        selector: !_this.state.selector\n      });\n\n      if (onToggleList) {\n        onToggleList();\n      }\n    };\n\n    _this._clearSearchTerm = function () {\n      _this.setState({\n        searchTerm: ''\n      });\n    };\n\n    _this._submitSelection = function () {\n      _this._toggleSelector();\n\n      _this._clearSearchTerm();\n    };\n\n    _this._itemSelected = function (item) {\n      var _this$props5 = _this.props,\n          uniqueKey = _this$props5.uniqueKey,\n          selectedItems = _this$props5.selectedItems;\n      return selectedItems.indexOf(item[uniqueKey]) !== -1;\n    };\n\n    _this._addItem = function () {\n      var _this$props6 = _this.props,\n          uniqueKey = _this$props6.uniqueKey,\n          items = _this$props6.items,\n          selectedItems = _this$props6.selectedItems,\n          onSelectedItemsChange = _this$props6.onSelectedItemsChange,\n          onAddItem = _this$props6.onAddItem;\n      var newItems = [];\n      var newSelectedItems = [];\n      var newItemName = _this.state.searchTerm;\n\n      if (newItemName) {\n        var _ref;\n\n        var newItemId = newItemName.split(' ').filter(function (word) {\n          return word.length;\n        }).join('-');\n        newItems = [].concat(_toConsumableArray(items), [(_ref = {}, _defineProperty(_ref, uniqueKey, newItemId), _defineProperty(_ref, \"name\", newItemName), _ref)]);\n        newSelectedItems = [].concat(_toConsumableArray(selectedItems), [newItemId]);\n        onAddItem(newItems);\n        onSelectedItemsChange(newSelectedItems);\n\n        _this._clearSearchTerm();\n      }\n    };\n\n    _this._toggleItem = function (item) {\n      var _this$props7 = _this.props,\n          single = _this$props7.single,\n          uniqueKey = _this$props7.uniqueKey,\n          selectedItems = _this$props7.selectedItems,\n          onSelectedItemsChange = _this$props7.onSelectedItemsChange;\n\n      if (single) {\n        _this._submitSelection();\n\n        onSelectedItemsChange([item[uniqueKey]]);\n      } else {\n        var status = _this._itemSelected(item);\n\n        var newItems = [];\n\n        if (status) {\n          newItems = reject(selectedItems, function (singleItem) {\n            return item[uniqueKey] === singleItem;\n          });\n        } else {\n          newItems = [].concat(_toConsumableArray(selectedItems), [item[uniqueKey]]);\n        }\n\n        onSelectedItemsChange(newItems);\n      }\n    };\n\n    _this._itemStyle = function (item) {\n      var _this$props8 = _this.props,\n          selectedItemFontFamily = _this$props8.selectedItemFontFamily,\n          selectedItemTextColor = _this$props8.selectedItemTextColor,\n          itemFontFamily = _this$props8.itemFontFamily,\n          itemTextColor = _this$props8.itemTextColor,\n          itemFontSize = _this$props8.itemFontSize;\n\n      var isSelected = _this._itemSelected(item);\n\n      var fontFamily = {};\n\n      if (isSelected && selectedItemFontFamily) {\n        fontFamily.fontFamily = selectedItemFontFamily;\n      } else if (!isSelected && itemFontFamily) {\n        fontFamily.fontFamily = itemFontFamily;\n      }\n\n      var color = isSelected ? {\n        color: selectedItemTextColor\n      } : {\n        color: itemTextColor\n      };\n      return _objectSpread(_objectSpread(_objectSpread({}, fontFamily), color), {}, {\n        fontSize: itemFontSize\n      });\n    };\n\n    _this._getRow = function (item) {\n      var _this$props9 = _this.props,\n          selectedItemIconColor = _this$props9.selectedItemIconColor,\n          displayKey = _this$props9.displayKey,\n          styleRowList = _this$props9.styleRowList;\n      return React.createElement(TouchableOpacity, {\n        disabled: item.disabled,\n        onPress: function onPress() {\n          return _this._toggleItem(item);\n        },\n        style: [styleRowList && styleRowList, {\n          paddingLeft: 20,\n          paddingRight: 20\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [{\n          flex: 1,\n          fontSize: 16,\n          paddingTop: 5,\n          paddingBottom: 5\n        }, _this._itemStyle(item), item.disabled ? {\n          color: 'grey'\n        } : {}],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }\n      }, item[displayKey]), _this._itemSelected(item) ? React.createElement(Icon, {\n        name: \"check\",\n        style: {\n          fontSize: 20,\n          color: selectedItemIconColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }\n      }) : null)));\n    };\n\n    _this._getRowNew = function (item) {\n      return React.createElement(TouchableOpacity, {\n        disabled: item.disabled,\n        onPress: function onPress() {\n          return _this._addItem(item);\n        },\n        style: {\n          paddingLeft: 20,\n          paddingRight: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [{\n          flex: 1,\n          fontSize: 16,\n          paddingTop: 5,\n          paddingBottom: 5\n        }, _this._itemStyle(item), item.disabled ? {\n          color: 'grey'\n        } : {}],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }\n      }, \"Add \", item.name, \" (tap or press return)\"))));\n    };\n\n    _this._filterItems = function (searchTerm) {\n      switch (_this.props.filterMethod) {\n        case 'full':\n          return _this._filterItemsFull(searchTerm);\n\n        default:\n          return _this._filterItemsPartial(searchTerm);\n      }\n    };\n\n    _this._filterItemsPartial = function (searchTerm) {\n      var _this$props10 = _this.props,\n          items = _this$props10.items,\n          displayKey = _this$props10.displayKey;\n      var filteredItems = [];\n      items.forEach(function (item) {\n        var parts = searchTerm.trim().split(/[ \\-:]+/);\n        var regex = new RegExp(\"(\" + parts.join('|') + \")\", 'ig');\n\n        if (regex.test(get(item, displayKey))) {\n          filteredItems.push(item);\n        }\n      });\n      return filteredItems;\n    };\n\n    _this._filterItemsFull = function (searchTerm) {\n      var _this$props11 = _this.props,\n          items = _this$props11.items,\n          displayKey = _this$props11.displayKey;\n      var filteredItems = [];\n      items.forEach(function (item) {\n        if (item[displayKey].toLowerCase().indexOf(searchTerm.trim().toLowerCase()) >= 0) {\n          filteredItems.push(item);\n        }\n      });\n      return filteredItems;\n    };\n\n    _this._renderItems = function () {\n      var _this$props12 = _this.props,\n          canAddItems = _this$props12.canAddItems,\n          items = _this$props12.items,\n          fontFamily = _this$props12.fontFamily,\n          uniqueKey = _this$props12.uniqueKey,\n          selectedItems = _this$props12.selectedItems,\n          flatListProps = _this$props12.flatListProps,\n          styleListContainer = _this$props12.styleListContainer,\n          removeSelected = _this$props12.removeSelected;\n      var searchTerm = _this.state.searchTerm;\n      var component = null;\n      var searchTermMatch;\n      var itemList;\n      var addItemRow;\n      var renderItems = searchTerm ? _this._filterItems(searchTerm) : items;\n\n      if (removeSelected) {\n        renderItems = renderItems.filter(function (item) {\n          return !selectedItems.includes(item[uniqueKey]);\n        });\n      }\n\n      if (renderItems.length) {\n        itemList = React.createElement(FlatList, _extends({\n          data: renderItems,\n          extraData: selectedItems,\n          keyExtractor: function keyExtractor(item) {\n            return item[uniqueKey];\n          },\n          listKey: function listKey(item) {\n            return item[uniqueKey];\n          },\n          renderItem: function renderItem(rowData) {\n            return _this._getRow(rowData.item);\n          }\n        }, flatListProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 9\n          }\n        }));\n        searchTermMatch = renderItems.filter(function (item) {\n          return item.name === searchTerm;\n        }).length;\n      } else if (!canAddItems) {\n        itemList = React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: [{\n            flex: 1,\n            marginTop: 20,\n            textAlign: 'center',\n            color: colorPack.danger\n          }, fontFamily ? {\n            fontFamily: fontFamily\n          } : {}],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 11\n          }\n        }, \"No item to display.\"));\n      }\n\n      if (canAddItems && !searchTermMatch && searchTerm.length) {\n        addItemRow = _this._getRowNew({\n          name: searchTerm\n        });\n      }\n\n      component = React.createElement(View, {\n        style: styleListContainer && styleListContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 7\n        }\n      }, itemList, addItemRow);\n      return component;\n    };\n\n    _this.state = {\n      selector: false,\n      searchTerm: ''\n    };\n    return _this;\n  }\n\n  _createClass(MultiSelect, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props13 = this.props,\n          selectedItems = _this$props13.selectedItems,\n          single = _this$props13.single,\n          fontFamily = _this$props13.fontFamily,\n          altFontFamily = _this$props13.altFontFamily,\n          searchInputPlaceholderText = _this$props13.searchInputPlaceholderText,\n          searchInputStyle = _this$props13.searchInputStyle,\n          styleDropdownMenu = _this$props13.styleDropdownMenu,\n          styleDropdownMenuSubsection = _this$props13.styleDropdownMenuSubsection,\n          hideSubmitButton = _this$props13.hideSubmitButton,\n          hideDropdown = _this$props13.hideDropdown,\n          submitButtonColor = _this$props13.submitButtonColor,\n          submitButtonText = _this$props13.submitButtonText,\n          fontSize = _this$props13.fontSize,\n          textColor = _this$props13.textColor,\n          fixedHeight = _this$props13.fixedHeight,\n          hideTags = _this$props13.hideTags,\n          textInputProps = _this$props13.textInputProps,\n          styleMainWrapper = _this$props13.styleMainWrapper,\n          styleInputGroup = _this$props13.styleInputGroup,\n          styleItemsContainer = _this$props13.styleItemsContainer,\n          styleSelectorContainer = _this$props13.styleSelectorContainer,\n          styleTextDropdown = _this$props13.styleTextDropdown,\n          styleTextDropdownSelected = _this$props13.styleTextDropdownSelected,\n          searchIcon = _this$props13.searchIcon;\n      var _this$state = this.state,\n          searchTerm = _this$state.searchTerm,\n          selector = _this$state.selector;\n      return React.createElement(View, {\n        style: [{\n          flexDirection: 'column'\n        } && styleMainWrapper && styleMainWrapper],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 7\n        }\n      }, selector ? React.createElement(View, {\n        style: [styles.selectorView(fixedHeight), styleSelectorContainer && styleSelectorContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: [styles.inputGroup, styleInputGroup && styleInputGroup],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }\n      }, searchIcon, React.createElement(TextInput, _extends({\n        autoFocus: true,\n        onChangeText: this._onChangeInput,\n        onSubmitEditing: this._addItem,\n        placeholder: searchInputPlaceholderText,\n        placeholderTextColor: colorPack.placeholderTextColor,\n        underlineColorAndroid: \"transparent\",\n        style: [searchInputStyle, {\n          flex: 1\n        }],\n        value: searchTerm\n      }, textInputProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 15\n        }\n      })), hideSubmitButton && React.createElement(TouchableOpacity, {\n        onPress: this._submitSelection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: \"menu-down\",\n        style: [styles.indicator, {\n          paddingLeft: 15,\n          paddingRight: 15\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 19\n        }\n      })), !hideDropdown && React.createElement(Icon, {\n        name: \"arrow-left\",\n        size: 20,\n        onPress: this._clearSelectorCallback,\n        color: colorPack.placeholderTextColor,\n        style: {\n          marginLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: 'column',\n          backgroundColor: '#fafafa'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styleItemsContainer && styleItemsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 15\n        }\n      }, this._renderItems()), !single && !hideSubmitButton && React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2._submitSelection();\n        },\n        style: [styles.button, {\n          backgroundColor: submitButtonColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [styles.buttonText, fontFamily ? {\n          fontFamily: fontFamily\n        } : {}],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 19\n        }\n      }, submitButtonText)))) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: [styles.dropdownView, styleDropdownMenu && styleDropdownMenu],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: [styles.subSection, {\n          paddingTop: 10,\n          paddingBottom: 10\n        }, styleDropdownMenuSubsection && styleDropdownMenuSubsection],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this._toggleSelector,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: !selectedItems || selectedItems.length === 0 ? [{\n          flex: 1,\n          fontSize: fontSize || 16,\n          color: textColor || colorPack.placeholderTextColor\n        }, styleTextDropdown && styleTextDropdown, altFontFamily ? {\n          fontFamily: altFontFamily\n        } : fontFamily ? {\n          fontFamily: fontFamily\n        } : {}] : [{\n          flex: 1,\n          fontSize: fontSize || 16,\n          color: textColor || colorPack.placeholderTextColor\n        }, styleTextDropdownSelected && styleTextDropdownSelected],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 21\n        }\n      }, this._getSelectLabel()), React.createElement(Icon, {\n        name: hideSubmitButton ? 'menu-right' : 'menu-down',\n        style: styles.indicator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 21\n        }\n      }))))), !single && !hideTags && selectedItems.length ? React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 15\n        }\n      }, this._displaySelectedItems()) : null));\n    }\n  }]);\n\n  return MultiSelect;\n}(Component);\n\nMultiSelect.propTypes = {\n  single: PropTypes.bool,\n  selectedItems: PropTypes.array,\n  items: PropTypes.array.isRequired,\n  uniqueKey: PropTypes.string,\n  tagBorderColor: PropTypes.string,\n  tagTextColor: PropTypes.string,\n  fontFamily: PropTypes.string,\n  tagRemoveIconColor: PropTypes.string,\n  onSelectedItemsChange: PropTypes.func.isRequired,\n  selectedItemFontFamily: PropTypes.string,\n  selectedItemTextColor: PropTypes.string,\n  itemFontFamily: PropTypes.string,\n  itemTextColor: PropTypes.string,\n  itemFontSize: PropTypes.number,\n  selectedItemIconColor: PropTypes.string,\n  searchIcon: nodeTypes,\n  searchInputPlaceholderText: PropTypes.string,\n  searchInputStyle: PropTypes.object,\n  selectText: PropTypes.string,\n  styleDropdownMenu: ViewPropTypes.style,\n  styleDropdownMenuSubsection: ViewPropTypes.style,\n  styleInputGroup: ViewPropTypes.style,\n  styleItemsContainer: ViewPropTypes.style,\n  styleListContainer: ViewPropTypes.style,\n  styleMainWrapper: ViewPropTypes.style,\n  styleRowList: ViewPropTypes.style,\n  styleSelectorContainer: ViewPropTypes.style,\n  styleTextDropdown: Text.propTypes.style,\n  styleTextDropdownSelected: Text.propTypes.style,\n  altFontFamily: PropTypes.string,\n  hideSubmitButton: PropTypes.bool,\n  hideDropdown: PropTypes.bool,\n  submitButtonColor: PropTypes.string,\n  submitButtonText: PropTypes.string,\n  textColor: PropTypes.string,\n  fontSize: PropTypes.number,\n  fixedHeight: PropTypes.bool,\n  hideTags: PropTypes.bool,\n  canAddItems: PropTypes.bool,\n  onAddItem: PropTypes.func,\n  onChangeInput: PropTypes.func,\n  displayKey: PropTypes.string,\n  textInputProps: PropTypes.object,\n  flatListProps: PropTypes.object,\n  filterMethod: PropTypes.string,\n  onClearSelector: PropTypes.func,\n  onToggleList: PropTypes.func,\n  removeSelected: PropTypes.bool\n};\nMultiSelect.defaultProps = {\n  single: false,\n  selectedItems: [],\n  uniqueKey: '_id',\n  tagBorderColor: colorPack.primary,\n  tagTextColor: colorPack.primary,\n  fontFamily: '',\n  tagRemoveIconColor: colorPack.danger,\n  selectedItemFontFamily: '',\n  selectedItemTextColor: colorPack.primary,\n  searchIcon: defaultSearchIcon,\n  itemFontFamily: '',\n  itemTextColor: colorPack.textPrimary,\n  itemFontSize: 16,\n  selectedItemIconColor: colorPack.primary,\n  searchInputPlaceholderText: 'Search',\n  searchInputStyle: {\n    color: colorPack.textPrimary\n  },\n  textColor: colorPack.textPrimary,\n  selectText: 'Select',\n  altFontFamily: '',\n  hideSubmitButton: false,\n  submitButtonColor: '#CCC',\n  submitButtonText: 'Submit',\n  fontSize: 14,\n  fixedHeight: false,\n  hideTags: false,\n  hideDropdown: false,\n  onChangeInput: function onChangeInput() {},\n  displayKey: 'name',\n  canAddItems: false,\n  onAddItem: function onAddItem() {},\n  onClearSelector: function onClearSelector() {},\n  onToggleList: function onToggleList() {},\n  removeSelected: false\n};\nexport { MultiSelect as default };","map":{"version":3,"sources":["D:/Krishma_other_pc/react-native_attendance_with_navigation-master/node_modules/react-native-multiple-select/lib/react-native-multi-select.js"],"names":["React","Component","PropTypes","reject","find","get","Icon","styles","colorPack","nodeTypes","UIManager","setLayoutAnimationEnabledExperimental","defaultSearchIcon","placeholderTextColor","marginRight","MultiSelect","props","getSelectedItemsExt","optionalSelctedItems","flexDirection","flexWrap","_displaySelectedItems","_onChangeInput","value","onChangeInput","setState","searchTerm","_getSelectLabel","selectText","single","selectedItems","displayKey","length","item","foundItem","_findItem","itemKey","items","uniqueKey","singleItem","fontFamily","tagRemoveIconColor","tagBorderColor","tagTextColor","actualSelectedItems","map","singleSelectedItem","selectedItem","width","justifyContent","height","borderColor","flex","color","fontSize","_removeItem","marginLeft","onSelectedItemsChange","newItems","_removeAllItems","_clearSelector","selector","_clearSelectorCallback","onClearSelector","_toggleSelector","onToggleList","state","_clearSearchTerm","_submitSelection","_itemSelected","indexOf","_addItem","onAddItem","newSelectedItems","newItemName","newItemId","split","filter","word","join","_toggleItem","status","_itemStyle","selectedItemFontFamily","selectedItemTextColor","itemFontFamily","itemTextColor","itemFontSize","isSelected","_getRow","selectedItemIconColor","styleRowList","disabled","paddingLeft","paddingRight","alignItems","paddingTop","paddingBottom","_getRowNew","name","_filterItems","filterMethod","_filterItemsFull","_filterItemsPartial","filteredItems","forEach","parts","trim","regex","RegExp","test","push","toLowerCase","_renderItems","canAddItems","flatListProps","styleListContainer","removeSelected","component","searchTermMatch","itemList","addItemRow","renderItems","includes","rowData","marginTop","textAlign","danger","altFontFamily","searchInputPlaceholderText","searchInputStyle","styleDropdownMenu","styleDropdownMenuSubsection","hideSubmitButton","hideDropdown","submitButtonColor","submitButtonText","textColor","fixedHeight","hideTags","textInputProps","styleMainWrapper","styleInputGroup","styleItemsContainer","styleSelectorContainer","styleTextDropdown","styleTextDropdownSelected","searchIcon","selectorView","inputGroup","indicator","backgroundColor","button","buttonText","dropdownView","subSection","propTypes","bool","array","isRequired","string","func","number","object","ViewPropTypes","style","Text","defaultProps","primary","textPrimary"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Text,\n  View,\n  TextInput,\n  TouchableWithoutFeedback,\n  TouchableOpacity,\n  FlatList,\n  UIManager,\n  ViewPropTypes\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport reject from 'lodash/reject';\nimport find from 'lodash/find';\nimport get from 'lodash/get';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nimport styles, { colorPack } from './styles';\nimport nodeTypes from './helpers/nodeTypes';\n\n// set UIManager LayoutAnimationEnabledExperimental\nif (UIManager.setLayoutAnimationEnabledExperimental) {\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n}\n\nconst defaultSearchIcon = (\n  <Icon\n    name=\"magnify\"\n    size={20}\n    color={colorPack.placeholderTextColor}\n    style={{ marginRight: 10 }}\n  />\n);\n\nexport default class MultiSelect extends Component {\n  static propTypes = {\n    single: PropTypes.bool,\n    selectedItems: PropTypes.array,\n    items: PropTypes.array.isRequired,\n    uniqueKey: PropTypes.string,\n    tagBorderColor: PropTypes.string,\n    tagTextColor: PropTypes.string,\n    fontFamily: PropTypes.string,\n    tagRemoveIconColor: PropTypes.string,\n    onSelectedItemsChange: PropTypes.func.isRequired,\n    selectedItemFontFamily: PropTypes.string,\n    selectedItemTextColor: PropTypes.string,\n    itemFontFamily: PropTypes.string,\n    itemTextColor: PropTypes.string,\n    itemFontSize: PropTypes.number,\n    selectedItemIconColor: PropTypes.string,\n    searchIcon: nodeTypes,\n    searchInputPlaceholderText: PropTypes.string,\n    searchInputStyle: PropTypes.object,\n    selectText: PropTypes.string,\n    styleDropdownMenu: ViewPropTypes.style,\n    styleDropdownMenuSubsection: ViewPropTypes.style,\n    styleInputGroup: ViewPropTypes.style,\n    styleItemsContainer: ViewPropTypes.style,\n    styleListContainer: ViewPropTypes.style,\n    styleMainWrapper: ViewPropTypes.style,\n    styleRowList: ViewPropTypes.style,\n    styleSelectorContainer: ViewPropTypes.style,\n    styleTextDropdown: Text.propTypes.style,\n    styleTextDropdownSelected: Text.propTypes.style,\n    altFontFamily: PropTypes.string,\n    hideSubmitButton: PropTypes.bool,\n    hideDropdown: PropTypes.bool,\n    submitButtonColor: PropTypes.string,\n    submitButtonText: PropTypes.string,\n    textColor: PropTypes.string,\n    fontSize: PropTypes.number,\n    fixedHeight: PropTypes.bool,\n    hideTags: PropTypes.bool,\n    canAddItems: PropTypes.bool,\n    onAddItem: PropTypes.func,\n    onChangeInput: PropTypes.func,\n    displayKey: PropTypes.string,\n    textInputProps: PropTypes.object,\n    flatListProps: PropTypes.object,\n    filterMethod: PropTypes.string,\n    onClearSelector: PropTypes.func,\n    onToggleList: PropTypes.func,\n    removeSelected: PropTypes.bool\n  };\n\n  static defaultProps = {\n    single: false,\n    selectedItems: [],\n    uniqueKey: '_id',\n    tagBorderColor: colorPack.primary,\n    tagTextColor: colorPack.primary,\n    fontFamily: '',\n    tagRemoveIconColor: colorPack.danger,\n    selectedItemFontFamily: '',\n    selectedItemTextColor: colorPack.primary,\n    searchIcon: defaultSearchIcon,\n    itemFontFamily: '',\n    itemTextColor: colorPack.textPrimary,\n    itemFontSize: 16,\n    selectedItemIconColor: colorPack.primary,\n    searchInputPlaceholderText: 'Search',\n    searchInputStyle: { color: colorPack.textPrimary },\n    textColor: colorPack.textPrimary,\n    selectText: 'Select',\n    altFontFamily: '',\n    hideSubmitButton: false,\n    submitButtonColor: '#CCC',\n    submitButtonText: 'Submit',\n    fontSize: 14,\n    fixedHeight: false,\n    hideTags: false,\n    hideDropdown: false,\n    onChangeInput: () => {},\n    displayKey: 'name',\n    canAddItems: false,\n    onAddItem: () => {},\n    onClearSelector: () => {},\n    onToggleList: () => {},\n    removeSelected: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selector: false,\n      searchTerm: ''\n    };\n  }\n\n  shouldComponentUpdate() {\n    // console.log('Component Updating: ', nextProps.selectedItems);\n    return true;\n  }\n\n  getSelectedItemsExt = optionalSelctedItems => (\n    <View\n      style={{\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n      }}\n    >\n      {this._displaySelectedItems(optionalSelctedItems)}\n    </View>\n  );\n\n  _onChangeInput = value => {\n    const { onChangeInput } = this.props;\n    if (onChangeInput) {\n      onChangeInput(value);\n    }\n    this.setState({ searchTerm: value });\n  };\n\n  _getSelectLabel = () => {\n    const { selectText, single, selectedItems, displayKey } = this.props;\n    if (!selectedItems || selectedItems.length === 0) {\n      return selectText;\n    }\n    if (single) {\n      const item = selectedItems[0];\n      const foundItem = this._findItem(item);\n      return get(foundItem, displayKey) || selectText;\n    }\n    return `${selectText} (${selectedItems.length} selected)`;\n  };\n\n  _findItem = itemKey => {\n    const { items, uniqueKey } = this.props;\n    return find(items, singleItem => singleItem[uniqueKey] === itemKey) || {};\n  };\n\n  _displaySelectedItems = optionalSelctedItems => {\n    const {\n      fontFamily,\n      tagRemoveIconColor,\n      tagBorderColor,\n      uniqueKey,\n      tagTextColor,\n      selectedItems,\n      displayKey\n    } = this.props;\n    const actualSelectedItems = optionalSelctedItems || selectedItems;\n    return actualSelectedItems.map(singleSelectedItem => {\n      const item = this._findItem(singleSelectedItem);\n      if (!item[displayKey]) return null;\n      return (\n        <View\n          style={[\n            styles.selectedItem,\n            {\n              width: item[displayKey].length * 8 + 60,\n              justifyContent: 'center',\n              height: 40,\n              borderColor: tagBorderColor\n            }\n          ]}\n          key={item[uniqueKey]}\n        >\n          <Text\n            style={[\n              {\n                flex: 1,\n                color: tagTextColor,\n                fontSize: 15\n              },\n              fontFamily ? { fontFamily } : {}\n            ]}\n            numberOfLines={1}\n          >\n            {item[displayKey]}\n          </Text>\n          <TouchableOpacity\n            onPress={() => {\n              this._removeItem(item);\n            }}\n          >\n            <Icon\n              name=\"close-circle\"\n              style={{\n                color: tagRemoveIconColor,\n                fontSize: 22,\n                marginLeft: 10\n              }}\n            />\n          </TouchableOpacity>\n        </View>\n      );\n    });\n  };\n\n  _removeItem = item => {\n    const { uniqueKey, selectedItems, onSelectedItemsChange } = this.props;\n    const newItems = reject(\n      selectedItems,\n      singleItem => item[uniqueKey] === singleItem\n    );\n    // broadcast new selected items state to parent component\n    onSelectedItemsChange(newItems);\n  };\n\n  _removeAllItems = () => {\n    const { onSelectedItemsChange } = this.props;\n    // broadcast new selected items state to parent component\n    onSelectedItemsChange([]);\n  };\n\n  _clearSelector = () => {\n    this.setState({\n      selector: false\n    });\n  };\n\n  _clearSelectorCallback = () => {\n    const { onClearSelector } = this.props;\n    this._clearSelector();\n    if (onClearSelector) {\n      onClearSelector();\n    }\n  };\n\n  _toggleSelector = () => {\n    const { onToggleList } = this.props;\n    this.setState({\n      selector: !this.state.selector\n    });\n    if (onToggleList) {\n      onToggleList();\n    }\n  };\n\n  _clearSearchTerm = () => {\n    this.setState({\n      searchTerm: ''\n    });\n  };\n\n  _submitSelection = () => {\n    this._toggleSelector();\n    // reset searchTerm\n    this._clearSearchTerm();\n  };\n\n  _itemSelected = item => {\n    const { uniqueKey, selectedItems } = this.props;\n    return selectedItems.indexOf(item[uniqueKey]) !== -1;\n  };\n\n  _addItem = () => {\n    const {\n      uniqueKey,\n      items,\n      selectedItems,\n      onSelectedItemsChange,\n      onAddItem\n    } = this.props;\n    let newItems = [];\n    let newSelectedItems = [];\n    const newItemName = this.state.searchTerm;\n    if (newItemName) {\n      const newItemId = newItemName\n        .split(' ')\n        .filter(word => word.length)\n        .join('-');\n      newItems = [...items, { [uniqueKey]: newItemId, name: newItemName }];\n      newSelectedItems = [...selectedItems, newItemId];\n      onAddItem(newItems);\n      onSelectedItemsChange(newSelectedItems);\n      this._clearSearchTerm();\n    }\n  };\n\n  _toggleItem = item => {\n    const {\n      single,\n      uniqueKey,\n      selectedItems,\n      onSelectedItemsChange\n    } = this.props;\n    if (single) {\n      this._submitSelection();\n      onSelectedItemsChange([item[uniqueKey]]);\n    } else {\n      const status = this._itemSelected(item);\n      let newItems = [];\n      if (status) {\n        newItems = reject(\n          selectedItems,\n          singleItem => item[uniqueKey] === singleItem\n        );\n      } else {\n        newItems = [...selectedItems, item[uniqueKey]];\n      }\n      // broadcast new selected items state to parent component\n      onSelectedItemsChange(newItems);\n    }\n  };\n\n  _itemStyle = item => {\n    const {\n      selectedItemFontFamily,\n      selectedItemTextColor,\n      itemFontFamily,\n      itemTextColor,\n      itemFontSize\n    } = this.props;\n    const isSelected = this._itemSelected(item);\n    const fontFamily = {};\n    if (isSelected && selectedItemFontFamily) {\n      fontFamily.fontFamily = selectedItemFontFamily;\n    } else if (!isSelected && itemFontFamily) {\n      fontFamily.fontFamily = itemFontFamily;\n    }\n    const color = isSelected\n      ? { color: selectedItemTextColor }\n      : { color: itemTextColor };\n    return {\n      ...fontFamily,\n      ...color,\n      fontSize: itemFontSize\n    };\n  };\n\n  _getRow = item => {\n    const { selectedItemIconColor, displayKey, styleRowList } = this.props;\n    return (\n      <TouchableOpacity\n        disabled={item.disabled}\n        onPress={() => this._toggleItem(item)}\n        style={[\n          styleRowList && styleRowList,\n          { paddingLeft: 20, paddingRight: 20 }\n        ]}\n      >\n        <View>\n          <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n            <Text\n              style={[\n                {\n                  flex: 1,\n                  fontSize: 16,\n                  paddingTop: 5,\n                  paddingBottom: 5\n                },\n                this._itemStyle(item),\n                item.disabled ? { color: 'grey' } : {}\n              ]}\n            >\n              {item[displayKey]}\n            </Text>\n            {this._itemSelected(item) ? (\n              <Icon\n                name=\"check\"\n                style={{\n                  fontSize: 20,\n                  color: selectedItemIconColor\n                }}\n              />\n            ) : null}\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  _getRowNew = item => (\n    <TouchableOpacity\n      disabled={item.disabled}\n      onPress={() => this._addItem(item)}\n      style={{ paddingLeft: 20, paddingRight: 20 }}\n    >\n      <View>\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <Text\n            style={[\n              {\n                flex: 1,\n                fontSize: 16,\n                paddingTop: 5,\n                paddingBottom: 5\n              },\n              this._itemStyle(item),\n              item.disabled ? { color: 'grey' } : {}\n            ]}\n          >\n            Add {item.name} (tap or press return)\n          </Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n\n  _filterItems = searchTerm => {\n    switch (this.props.filterMethod) {\n      case 'full':\n        return this._filterItemsFull(searchTerm);\n      default:\n        return this._filterItemsPartial(searchTerm);\n    }\n  };\n\n  _filterItemsPartial = searchTerm => {\n    const { items, displayKey } = this.props;\n    const filteredItems = [];\n    items.forEach(item => {\n      const parts = searchTerm.trim().split(/[ \\-:]+/);\n      const regex = new RegExp(`(${parts.join('|')})`, 'ig');\n      if (regex.test(get(item, displayKey))) {\n        filteredItems.push(item);\n      }\n    });\n    return filteredItems;\n  };\n\n  _filterItemsFull = searchTerm => {\n    const { items, displayKey } = this.props;\n    const filteredItems = [];\n    items.forEach(item => {\n      if (\n        item[displayKey]\n          .toLowerCase()\n          .indexOf(searchTerm.trim().toLowerCase()) >= 0\n      ) {\n        filteredItems.push(item);\n      }\n    });\n    return filteredItems;\n  };\n\n  _renderItems = () => {\n    const {\n      canAddItems,\n      items,\n      fontFamily,\n      uniqueKey,\n      selectedItems,\n      flatListProps,\n      styleListContainer,\n      removeSelected\n    } = this.props;\n    const { searchTerm } = this.state;\n    let component = null;\n    // If searchTerm matches an item in the list, we should not add a new\n    // element to the list.\n    let searchTermMatch;\n    let itemList;\n    let addItemRow;\n    let renderItems = searchTerm ? this._filterItems(searchTerm) : items;\n    // Filtering already selected items\n    if (removeSelected) {\n      renderItems = renderItems.filter(\n        item => !selectedItems.includes(item[uniqueKey])\n      );\n    }\n    if (renderItems.length) {\n      itemList = (\n        <FlatList\n          data={renderItems}\n          extraData={selectedItems}\n          keyExtractor={item => item[uniqueKey]}\n          listKey={item => item[uniqueKey]}\n          renderItem={rowData => this._getRow(rowData.item)}\n          {...flatListProps}\n        />\n      );\n      searchTermMatch = renderItems.filter(item => item.name === searchTerm)\n        .length;\n    } else if (!canAddItems) {\n      itemList = (\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <Text\n            style={[\n              {\n                flex: 1,\n                marginTop: 20,\n                textAlign: 'center',\n                color: colorPack.danger\n              },\n              fontFamily ? { fontFamily } : {}\n            ]}\n          >\n            No item to display.\n          </Text>\n        </View>\n      );\n    }\n\n    if (canAddItems && !searchTermMatch && searchTerm.length) {\n      addItemRow = this._getRowNew({ name: searchTerm });\n    }\n    component = (\n      <View style={styleListContainer && styleListContainer}>\n        {itemList}\n        {addItemRow}\n      </View>\n    );\n    return component;\n  };\n\n  render() {\n    const {\n      selectedItems,\n      single,\n      fontFamily,\n      altFontFamily,\n      searchInputPlaceholderText,\n      searchInputStyle,\n      styleDropdownMenu,\n      styleDropdownMenuSubsection,\n      hideSubmitButton,\n      hideDropdown,\n      submitButtonColor,\n      submitButtonText,\n      fontSize,\n      textColor,\n      fixedHeight,\n      hideTags,\n      textInputProps,\n      styleMainWrapper,\n      styleInputGroup,\n      styleItemsContainer,\n      styleSelectorContainer,\n      styleTextDropdown,\n      styleTextDropdownSelected,\n      searchIcon\n    } = this.props;\n    const { searchTerm, selector } = this.state;\n    return (\n      <View\n        style={[\n          {\n            flexDirection: 'column'\n          } &&\n            styleMainWrapper &&\n            styleMainWrapper\n        ]}\n      >\n        {selector ? (\n          <View\n            style={[\n              styles.selectorView(fixedHeight),\n              styleSelectorContainer && styleSelectorContainer\n            ]}\n          >\n            <View\n              style={[styles.inputGroup, styleInputGroup && styleInputGroup]}\n            >\n              {searchIcon}\n              <TextInput\n                autoFocus\n                onChangeText={this._onChangeInput}\n                onSubmitEditing={this._addItem}\n                placeholder={searchInputPlaceholderText}\n                placeholderTextColor={colorPack.placeholderTextColor}\n                underlineColorAndroid=\"transparent\"\n                style={[searchInputStyle, { flex: 1 }]}\n                value={searchTerm}\n                {...textInputProps}\n              />\n              {hideSubmitButton && (\n                <TouchableOpacity onPress={this._submitSelection}>\n                  <Icon\n                    name=\"menu-down\"\n                    style={[\n                      styles.indicator,\n                      { paddingLeft: 15, paddingRight: 15 }\n                    ]}\n                  />\n                </TouchableOpacity>\n              )}\n              {!hideDropdown && (\n                <Icon\n                  name=\"arrow-left\"\n                  size={20}\n                  onPress={this._clearSelectorCallback}\n                  color={colorPack.placeholderTextColor}\n                  style={{ marginLeft: 5 }}\n                />\n              )}\n            </View>\n            <View\n              style={{\n                flexDirection: 'column',\n                backgroundColor: '#fafafa'\n              }}\n            >\n              <View style={styleItemsContainer && styleItemsContainer}>\n                {this._renderItems()}\n              </View>\n              {!single && !hideSubmitButton && (\n                <TouchableOpacity\n                  onPress={() => this._submitSelection()}\n                  style={[\n                    styles.button,\n                    { backgroundColor: submitButtonColor }\n                  ]}\n                >\n                  <Text\n                    style={[\n                      styles.buttonText,\n                      fontFamily ? { fontFamily } : {}\n                    ]}\n                  >\n                    {submitButtonText}\n                  </Text>\n                </TouchableOpacity>\n              )}\n            </View>\n          </View>\n        ) : (\n          <View>\n            <View\n              style={[\n                styles.dropdownView,\n                styleDropdownMenu && styleDropdownMenu\n              ]}\n            >\n              <View\n                style={[\n                  styles.subSection,\n                  { paddingTop: 10, paddingBottom: 10 },\n                  styleDropdownMenuSubsection && styleDropdownMenuSubsection\n                ]}\n              >\n                <TouchableWithoutFeedback onPress={this._toggleSelector}>\n                  <View\n                    style={{\n                      flex: 1,\n                      flexDirection: 'row',\n                      alignItems: 'center'\n                    }}\n                  >\n                    <Text\n                      style={\n                        !selectedItems || selectedItems.length === 0\n                          ? [\n                              {\n                                flex: 1,\n                                fontSize: fontSize || 16,\n                                color:\n                                  textColor || colorPack.placeholderTextColor\n                              },\n                              styleTextDropdown && styleTextDropdown,\n                              altFontFamily\n                                ? { fontFamily: altFontFamily }\n                                : fontFamily\n                                ? { fontFamily }\n                                : {}\n                            ]\n                          : [\n                              {\n                                flex: 1,\n                                fontSize: fontSize || 16,\n                                color:\n                                  textColor || colorPack.placeholderTextColor\n                              },\n                              styleTextDropdownSelected &&\n                                styleTextDropdownSelected\n                            ]\n                      }\n                      numberOfLines={1}\n                    >\n                      {this._getSelectLabel()}\n                    </Text>\n                    <Icon\n                      name={hideSubmitButton ? 'menu-right' : 'menu-down'}\n                      style={styles.indicator}\n                    />\n                  </View>\n                </TouchableWithoutFeedback>\n              </View>\n            </View>\n            {!single && !hideTags && selectedItems.length ? (\n              <View\n                style={{\n                  flexDirection: 'row',\n                  flexWrap: 'wrap'\n                }}\n              >\n                {this._displaySelectedItems()}\n              </View>\n            ) : null}\n          </View>\n        )}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}