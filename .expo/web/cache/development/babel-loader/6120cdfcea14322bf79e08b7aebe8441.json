{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { WordArray } from \"./core/core.js\";\nimport { SHA256Algo } from \"./sha256.js\";\nexport var SHA224Algo = function (_SHA256Algo) {\n  _inherits(SHA224Algo, _SHA256Algo);\n\n  var _super = _createSuper(SHA224Algo);\n\n  function SHA224Algo() {\n    _classCallCheck(this, SHA224Algo);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SHA224Algo, [{\n    key: \"_doReset\",\n    value: function _doReset() {\n      this._hash = new WordArray([0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]);\n    }\n  }, {\n    key: \"_doFinalize\",\n    value: function _doFinalize() {\n      var hash = _get(_getPrototypeOf(SHA224Algo.prototype), \"_doFinalize\", this).call(this);\n\n      hash.sigBytes -= 4;\n      return hash;\n    }\n  }]);\n\n  return SHA224Algo;\n}(SHA256Algo);\nexport var SHA224 = SHA256Algo._createHelper(SHA224Algo);\nexport var HmacSHA224 = SHA256Algo._createHmacHelper(SHA224Algo);","map":{"version":3,"sources":["D:/Krishma_other_pc/react-native_attendance_app/node_modules/react-native-hash/JSHash/lib/sha224.js"],"names":["WordArray","SHA256Algo","SHA224Algo","_hash","hash","call","sigBytes","SHA224","_createHelper","HmacSHA224","_createHmacHelper"],"mappings":";;;;;;;;;;;AAEA,SAASA,SAAT;AACA,SAASC,UAAT;AAKA,WAAaC,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BACa;AACT,WAAKC,KAAL,GAAa,IAAIH,SAAJ,CAAc,CACzB,UADyB,EAEzB,UAFyB,EAGzB,UAHyB,EAIzB,UAJyB,EAKzB,UALyB,EAMzB,UANyB,EAOzB,UAPyB,EAQzB,UARyB,CAAd,CAAb;AAUD;AAZH;AAAA;AAAA,kCAcgB;AACZ,UAAMI,IAAI,GAAG,iEAAkBC,IAAlB,CAAuB,IAAvB,CAAb;;AAEAD,MAAAA,IAAI,CAACE,QAAL,IAAiB,CAAjB;AAEA,aAAOF,IAAP;AACD;AApBH;;AAAA;AAAA,EAAgCH,UAAhC;AAqCA,OAAO,IAAMM,MAAM,GAAGN,UAAU,CAACO,aAAX,CAAyBN,UAAzB,CAAf;AAgBP,OAAO,IAAMO,UAAU,GAAGR,UAAU,CAACS,iBAAX,CAA6BR,UAA7B,CAAnB","sourcesContent":["/* eslint linebreak-style: [\"error\", \"windows\"] */\r\n\r\nimport { WordArray } from './core/core.js';\r\nimport { SHA256Algo } from './sha256.js';\r\n\r\n/**\r\n * SHA-224 hash algorithm.\r\n */\r\nexport class SHA224Algo extends SHA256Algo {\r\n  _doReset() {\r\n    this._hash = new WordArray([\r\n      0xc1059ed8,\r\n      0x367cd507,\r\n      0x3070dd17,\r\n      0xf70e5939,\r\n      0xffc00b31,\r\n      0x68581511,\r\n      0x64f98fa7,\r\n      0xbefa4fa4,\r\n    ]);\r\n  }\r\n\r\n  _doFinalize() {\r\n    const hash = super._doFinalize.call(this);\r\n\r\n    hash.sigBytes -= 4;\r\n\r\n    return hash;\r\n  }\r\n}\r\n\r\n/**\r\n * Shortcut function to the hasher's object interface.\r\n *\r\n * @param {WordArray|string} message The message to hash.\r\n *\r\n * @return {WordArray} The hash.\r\n *\r\n * @static\r\n *\r\n * @example\r\n *\r\n *     var hash = CryptoJS.SHA224('message');\r\n *     var hash = CryptoJS.SHA224(wordArray);\r\n */\r\nexport const SHA224 = SHA256Algo._createHelper(SHA224Algo);\r\n\r\n/**\r\n * Shortcut function to the HMAC's object interface.\r\n *\r\n * @param {WordArray|string} message The message to hash.\r\n * @param {WordArray|string} key The secret key.\r\n *\r\n * @return {WordArray} The HMAC.\r\n *\r\n * @static\r\n *\r\n * @example\r\n *\r\n *     var hmac = CryptoJS.HmacSHA224(message, key);\r\n */\r\nexport const HmacSHA224 = SHA256Algo._createHmacHelper(SHA224Algo);\r\n"]},"metadata":{},"sourceType":"module"}