{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Hash from \"./lib/index.js\";\nvar HmacMD5 = Hash.HmacMD5,\n    HmacSHA1 = Hash.HmacSHA1,\n    HmacSHA224 = Hash.HmacSHA224,\n    HmacSHA256 = Hash.HmacSHA256,\n    HmacSHA384 = Hash.HmacSHA384,\n    HmacSHA512 = Hash.HmacSHA512,\n    Hex = Hash.format.Hex;\n\nvar hmacString = function hmacString(string, key, algorithm) {\n  var HMac, _HMac, _HMac2, _HMac3, _HMac4, _HMac5;\n\n  return _regeneratorRuntime.async(function hmacString$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = algorithm;\n          _context.next = _context.t0 === 'HmacMD5' ? 3 : _context.t0 === 'HmacSHA1' ? 7 : _context.t0 === 'HmacSHA224' ? 11 : _context.t0 === 'HmacSHA256' ? 15 : _context.t0 === 'HmacSHA384' ? 19 : _context.t0 === 'HmacSHA512' ? 23 : 27;\n          break;\n\n        case 3:\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(HmacMD5(string, key));\n\n        case 5:\n          HMac = _context.sent;\n          return _context.abrupt(\"return\", Hex.stringify(HMac));\n\n        case 7:\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(HmacSHA1(string, key));\n\n        case 9:\n          _HMac = _context.sent;\n          return _context.abrupt(\"return\", Hex.stringify(_HMac));\n\n        case 11:\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(HmacSHA224(string, key));\n\n        case 13:\n          _HMac2 = _context.sent;\n          return _context.abrupt(\"return\", Hex.stringify(_HMac2));\n\n        case 15:\n          _context.next = 17;\n          return _regeneratorRuntime.awrap(HmacSHA256(string, key));\n\n        case 17:\n          _HMac3 = _context.sent;\n          return _context.abrupt(\"return\", Hex.stringify(_HMac3));\n\n        case 19:\n          _context.next = 21;\n          return _regeneratorRuntime.awrap(HmacSHA384(string, key));\n\n        case 21:\n          _HMac4 = _context.sent;\n          return _context.abrupt(\"return\", Hex.stringify(_HMac4));\n\n        case 23:\n          _context.next = 25;\n          return _regeneratorRuntime.awrap(HmacSHA512(string, key));\n\n        case 25:\n          _HMac5 = _context.sent;\n          return _context.abrupt(\"return\", Hex.stringify(_HMac5));\n\n        case 27:\n          throw new Error(algorithm + \" algorithm is not suported\");\n\n        case 28:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default hmacString;","map":{"version":3,"sources":["D:/Krishma_other_pc/react-native_attendance_with_navigation-master/node_modules/react-native-hash/JSHash/JSHmac.js"],"names":["Hash","HmacMD5","HmacSHA1","HmacSHA224","HmacSHA256","HmacSHA384","HmacSHA512","Hex","format","hmacString","string","key","algorithm","HMac","stringify","Error"],"mappings":";AAGA,OAAOA,IAAP;IAGEC,O,GAOED,I,CAPFC,O;IACAC,Q,GAMEF,I,CANFE,Q;IACAC,U,GAKEH,I,CALFG,U;IACAC,U,GAIEJ,I,CAJFI,U;IACAC,U,GAGEL,I,CAHFK,U;IACAC,U,GAEEN,I,CAFFM,U;IACUC,G,GACRP,I,CADFQ,M,CAAUD,G;;AAQZ,IAAME,UAAU,GAAG,SAAbA,UAAa,CAAOC,MAAP,EAAeC,GAAf,EAAoBC,SAApB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACTA,SADS;AAAA,0CAEV,SAFU,uBAOV,UAPU,uBAYV,YAZU,wBAiBV,YAjBU,wBAqBV,YArBU,wBAyBV,YAzBU;AAAA;;AAAA;AAAA;AAAA,2CAGMX,OAAO,CAACS,MAAD,EAASC,GAAT,CAHb;;AAAA;AAGPE,UAAAA,IAHO;AAAA,2CAINN,GAAG,CAACO,SAAJ,CAAcD,IAAd,CAJM;;AAAA;AAAA;AAAA,2CAQMX,QAAQ,CAACQ,MAAD,EAASC,GAAT,CARd;;AAAA;AAQPE,UAAAA,KARO;AAAA,2CASNN,GAAG,CAACO,SAAJ,CAAcD,KAAd,CATM;;AAAA;AAAA;AAAA,2CAaMV,UAAU,CAACO,MAAD,EAASC,GAAT,CAbhB;;AAAA;AAaPE,UAAAA,MAbO;AAAA,2CAcNN,GAAG,CAACO,SAAJ,CAAcD,MAAd,CAdM;;AAAA;AAAA;AAAA,2CAkBMT,UAAU,CAACM,MAAD,EAASC,GAAT,CAlBhB;;AAAA;AAkBPE,UAAAA,MAlBO;AAAA,2CAmBNN,GAAG,CAACO,SAAJ,CAAcD,MAAd,CAnBM;;AAAA;AAAA;AAAA,2CAsBMR,UAAU,CAACK,MAAD,EAASC,GAAT,CAtBhB;;AAAA;AAsBPE,UAAAA,MAtBO;AAAA,2CAuBNN,GAAG,CAACO,SAAJ,CAAcD,MAAd,CAvBM;;AAAA;AAAA;AAAA,2CA0BMP,UAAU,CAACI,MAAD,EAASC,GAAT,CA1BhB;;AAAA;AA0BPE,UAAAA,MA1BO;AAAA,2CA2BNN,GAAG,CAACO,SAAJ,CAAcD,MAAd,CA3BM;;AAAA;AAAA,gBA8BP,IAAIE,KAAJ,CAAaH,SAAb,gCA9BO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAkCA,eAAeH,UAAf","sourcesContent":["/* eslint linebreak-style: [\"error\", \"windows\"] */\r\n/* eslint-disable no-use-before-define */\r\n\r\nimport Hash from './lib/index.js';\r\n\r\nconst {\r\n  HmacMD5,\r\n  HmacSHA1,\r\n  HmacSHA224,\r\n  HmacSHA256,\r\n  HmacSHA384,\r\n  HmacSHA512,\r\n  format: { Hex },\r\n} = Hash;\r\n\r\n/**\r\n *\r\n * @param {string} string\r\n * @param {string} algorithm\r\n */\r\nconst hmacString = async (string, key, algorithm) => {\r\n  switch (algorithm) {\r\n    case 'HmacMD5': {\r\n      const HMac = await HmacMD5(string, key);\r\n      return Hex.stringify(HMac);\r\n    }\r\n\r\n    case 'HmacSHA1': {\r\n      const HMac = await HmacSHA1(string, key);\r\n      return Hex.stringify(HMac);\r\n    }\r\n\r\n    case 'HmacSHA224': {\r\n      const HMac = await HmacSHA224(string, key);\r\n      return Hex.stringify(HMac);\r\n    }\r\n\r\n    case 'HmacSHA256': {\r\n      const HMac = await HmacSHA256(string, key);\r\n      return Hex.stringify(HMac);\r\n    }\r\n    case 'HmacSHA384': {\r\n      const HMac = await HmacSHA384(string, key);\r\n      return Hex.stringify(HMac);\r\n    }\r\n    case 'HmacSHA512': {\r\n      const HMac = await HmacSHA512(string, key);\r\n      return Hex.stringify(HMac);\r\n    }\r\n    default:\r\n      throw new Error(`${algorithm} algorithm is not suported`);\r\n  }\r\n};\r\n\r\nexport default hmacString;\r\n"]},"metadata":{},"sourceType":"module"}